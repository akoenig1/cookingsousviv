{"ast":null,"code":"/* instafeed.js | v2.0.0-rc2 | https://github.com/stevenschobert/instafeed.js | License: MIT */\n(function exportInstafeed(root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports === \"object\" && typeof exports.nodeName !== \"string\") {\n    module.exports = factory();\n  } else {\n    root.Instafeed = factory();\n  }\n})(this, function defineInstafeed() {\n  function assert(val, msg) {\n    if (!val) {\n      throw new Error(msg);\n    }\n  }\n\n  function Instafeed(options) {\n    assert(!options || typeof options === \"object\", \"options must be an object, got \" + options + \" (\" + typeof options + \")\");\n    var opts = {\n      accessToken: null,\n      accessTokenTimeout: 1e4,\n      after: null,\n      apiTimeout: 1e4,\n      before: null,\n      debug: false,\n      error: null,\n      filter: null,\n      limit: null,\n      mock: false,\n      render: null,\n      sort: null,\n      success: null,\n      target: \"instafeed\",\n      template: '<a href=\"{{link}}\"><img title=\"{{caption}}\" src=\"{{image}}\" /></a>',\n      templateBoundaries: [\"{{\", \"}}\"],\n      transform: null\n    };\n    var state = {\n      running: false\n    };\n\n    if (options) {\n      for (var optKey in opts) {\n        if (typeof options[optKey] !== \"undefined\") {\n          opts[optKey] = options[optKey];\n        }\n      }\n    }\n\n    assert(typeof opts.target === \"string\" || typeof opts.target === \"object\", \"target must be a string or DOM node, got \" + opts.target + \" (\" + typeof opts.target + \")\");\n    assert(typeof opts.accessToken === \"string\" || typeof opts.accessToken === \"function\", \"accessToken must be a string or function, got \" + opts.accessToken + \" (\" + typeof opts.accessToken + \")\");\n    assert(typeof opts.accessTokenTimeout === \"number\", \"accessTokenTimeout must be a number, got \" + opts.accessTokenTimeout + \" (\" + typeof opts.accessTokenTimeout + \")\");\n    assert(typeof opts.apiTimeout === \"number\", \"apiTimeout must be a number, got \" + opts.apiTimeout + \" (\" + typeof opts.apiTimeout + \")\");\n    assert(typeof opts.debug === \"boolean\", \"debug must be true or false, got \" + opts.debug + \" (\" + typeof opts.debug + \")\");\n    assert(typeof opts.mock === \"boolean\", \"mock must be true or false, got \" + opts.mock + \" (\" + typeof opts.mock + \")\");\n    assert(typeof opts.templateBoundaries === \"object\" && opts.templateBoundaries.length === 2 && typeof opts.templateBoundaries[0] === \"string\" && typeof opts.templateBoundaries[1] === \"string\", \"templateBoundaries must be an array of 2 strings, got \" + opts.templateBoundaries + \" (\" + typeof opts.templateBoundaries + \")\");\n    assert(!opts.template || typeof opts.template === \"string\", \"template must null or string, got \" + opts.template + \" (\" + typeof opts.template + \")\");\n    assert(!opts.error || typeof opts.error === \"function\", \"error must be null or function, got \" + opts.error + \" (\" + typeof opts.error + \")\");\n    assert(!opts.before || typeof opts.before === \"function\", \"before must be null or function, got \" + opts.before + \" (\" + typeof opts.before + \")\");\n    assert(!opts.after || typeof opts.after === \"function\", \"after must be null or function, got \" + opts.after + \" (\" + typeof opts.after + \")\");\n    assert(!opts.success || typeof opts.success === \"function\", \"success must be null or function, got \" + opts.success + \" (\" + typeof opts.success + \")\");\n    assert(!opts.filter || typeof opts.filter === \"function\", \"filter must be null or function, got \" + opts.filter + \" (\" + typeof opts.filter + \")\");\n    assert(!opts.transform || typeof opts.transform === \"function\", \"transform must be null or function, got \" + opts.transform + \" (\" + typeof opts.transform + \")\");\n    assert(!opts.sort || typeof opts.sort === \"function\", \"sort must be null or function, got \" + opts.sort + \" (\" + typeof opts.sort + \")\");\n    assert(!opts.render || typeof opts.render === \"function\", \"render must be null or function, got \" + opts.render + \" (\" + typeof opts.render + \")\");\n    assert(!opts.limit || typeof opts.limit === \"number\", \"limit must be null or number, got \" + opts.limit + \" (\" + typeof opts.limit + \")\");\n    this._state = state;\n    this._options = opts;\n  }\n\n  Instafeed.prototype.run = function run() {\n    var scope = this;\n    var node = null;\n    var url = null;\n    var items = null;\n    var html = null;\n\n    this._debug(\"run\", \"options\", this._options);\n\n    this._debug(\"run\", \"state\", this._state);\n\n    if (this._state.running) {\n      this._debug(\"run\", \"already running, skipping\");\n\n      return false;\n    }\n\n    this._start();\n\n    this._debug(\"run\", \"getting dom node\");\n\n    if (typeof this._options.target === \"string\") {\n      node = document.getElementById(this._options.target);\n    } else {\n      node = this._options.target;\n    }\n\n    if (!node) {\n      this._fail(new Error(\"no element found with ID \" + this._options.target));\n\n      return false;\n    }\n\n    this._debug(\"run\", \"got dom node\", node);\n\n    this._debug(\"run\", \"getting access token\");\n\n    this._getAccessToken(function onTokenReceived(err, token) {\n      if (err) {\n        scope._debug(\"onTokenReceived\", \"error\", err);\n\n        scope._fail(new Error(\"error getting access token: \" + err.message));\n\n        return;\n      }\n\n      url = \"https://graph.instagram.com/me/media?fields=caption,id,media_type,media_url,permalink,thumbnail_url,timestamp,username&access_token=\" + token;\n\n      scope._debug(\"onTokenReceived\", \"request url\", url);\n\n      scope._makeApiRequest(url, function onResponseReceived(err, data) {\n        if (err) {\n          scope._debug(\"onResponseReceived\", \"error\", err);\n\n          scope._fail(new Error(\"api request error: \" + err.message));\n\n          return;\n        }\n\n        scope._debug(\"onResponseReceived\", \"data\", data);\n\n        scope._success(data);\n\n        try {\n          items = scope._processData(data);\n\n          scope._debug(\"onResponseReceived\", \"processed data\", items);\n        } catch (processErr) {\n          scope._fail(processErr);\n\n          return;\n        }\n\n        if (scope._options.mock) {\n          scope._debug(\"onResponseReceived\", \"mock enabled, skipping render\");\n        } else {\n          try {\n            html = scope._renderData(items);\n\n            scope._debug(\"onResponseReceived\", \"html content\", html);\n          } catch (renderErr) {\n            scope._fail(renderErr);\n\n            return;\n          }\n\n          node.innerHTML = html;\n        }\n\n        scope._finish();\n      });\n    });\n\n    return true;\n  };\n\n  Instafeed.prototype._processData = function processData(data) {\n    var hasTransform = typeof this._options.transform === \"function\";\n    var hasFilter = typeof this._options.filter === \"function\";\n    var hasSort = typeof this._options.sort === \"function\";\n    var hasLimit = typeof this._options.limit === \"number\";\n    var transformedFiltered = [];\n    var limitDelta = null;\n    var dataItem = null;\n    var transformedItem = null;\n    var filterResult = null;\n\n    this._debug(\"processData\", \"hasFilter\", hasFilter, \"hasTransform\", hasTransform, \"hasSort\", hasSort, \"hasLimit\", hasLimit);\n\n    if (typeof data !== \"object\" || typeof data.data !== \"object\" || data.data.length <= 0) {\n      return null;\n    }\n\n    for (var i = 0; i < data.data.length; i++) {\n      dataItem = this._getItemData(data.data[i]);\n\n      if (hasTransform) {\n        try {\n          transformedItem = this._options.transform(dataItem);\n\n          this._debug(\"processData\", \"transformed item\", dataItem, transformedItem);\n        } catch (err) {\n          this._debug(\"processData\", \"error calling transform\", err);\n\n          throw new Error(\"error in transform: \" + err.message);\n        }\n      } else {\n        transformedItem = dataItem;\n      }\n\n      if (hasFilter) {\n        try {\n          filterResult = this._options.filter(transformedItem);\n\n          this._debug(\"processData\", \"filter item result\", transformedItem, filterResult);\n        } catch (err) {\n          this._debug(\"processData\", \"error calling filter\", err);\n\n          throw new Error(\"error in filter: \" + err.message);\n        }\n\n        if (filterResult) {\n          transformedFiltered.push(transformedItem);\n        }\n      } else {\n        transformedFiltered.push(transformedItem);\n      }\n    }\n\n    if (hasSort) {\n      try {\n        transformedFiltered.sort(this._options.sort);\n      } catch (err) {\n        this._debug(\"processData\", \"error calling sort\", err);\n\n        throw new Error(\"error in sort: \" + err.message);\n      }\n    }\n\n    if (hasLimit) {\n      limitDelta = transformedFiltered.length - this._options.limit;\n\n      this._debug(\"processData\", \"checking limit\", transformedFiltered.length, this._options.limit, limitDelta);\n\n      if (limitDelta > 0) {\n        transformedFiltered.splice(transformedFiltered.length - limitDelta, limitDelta);\n      }\n    }\n\n    return transformedFiltered;\n  };\n\n  Instafeed.prototype._extractTags = function extractTags(str) {\n    var exp = /#([^\\s]+)/gi;\n    var badChars = /[~`!@#$%^&*\\(\\)\\-\\+={}\\[\\]:;\"'<>\\?,\\./|\\\\\\s]+/i;\n    var tags = [];\n\n    if (typeof str === \"string\") {\n      while ((match = exp.exec(str)) !== null) {\n        if (badChars.test(match[1]) === false) {\n          tags.push(match[1]);\n        }\n      }\n    }\n\n    return tags;\n  };\n\n  Instafeed.prototype._getItemData = function getItemData(data) {\n    var type = null;\n    var image = null;\n\n    switch (data.media_type) {\n      case \"IMAGE\":\n        type = \"image\";\n        image = data.media_url;\n        break;\n\n      case \"VIDEO\":\n        type = \"video\";\n        image = data.thumbnail_url;\n        break;\n\n      case \"CAROUSEL_ALBUM\":\n        type = \"album\";\n        image = data.media_url;\n        break;\n    }\n\n    return {\n      caption: data.caption,\n      tags: this._extractTags(data.caption),\n      id: data.id,\n      image: image,\n      link: data.permalink,\n      model: data,\n      timestamp: data.timestamp,\n      type: type,\n      username: data.username\n    };\n  };\n\n  Instafeed.prototype._renderData = function renderData(items) {\n    var hasTemplate = typeof this._options.template === \"string\";\n    var hasRender = typeof this._options.render === \"function\";\n    var item = null;\n    var itemHtml = null;\n    var html = \"\";\n\n    this._debug(\"renderData\", \"hasTemplate\", hasTemplate, \"hasRender\", hasRender);\n\n    if (typeof items !== \"object\" || items.length <= 0) {\n      return null;\n    }\n\n    for (var i = 0; i < items.length; i++) {\n      item = items[i];\n\n      if (hasRender) {\n        try {\n          itemHtml = this._options.render(item, this._options);\n\n          this._debug(\"renderData\", \"custom render result\", item, itemHtml);\n        } catch (err) {\n          this._debug(\"renderData\", \"error calling render\", err);\n\n          throw new Error(\"error in render: \" + err.message);\n        }\n      } else if (hasTemplate) {\n        itemHtml = this._basicRender(item);\n      }\n\n      if (itemHtml) {\n        html = html + itemHtml;\n      } else {\n        this._debug(\"renderData\", \"render item did not return any content\", item);\n      }\n    }\n\n    return html;\n  };\n\n  Instafeed.prototype._basicRender = function basicRender(data) {\n    var exp = new RegExp(this._options.templateBoundaries[0] + \"([\\\\s\\\\w.]+)\" + this._options.templateBoundaries[1], \"gm\");\n    var template = this._options.template;\n    var match = null;\n    var output = \"\";\n    var substr = null;\n    var lastIndex = 0;\n    var keyPath = null;\n    var keyPathValue = null;\n\n    while ((match = exp.exec(template)) !== null) {\n      keyPath = match[1];\n      substr = template.slice(lastIndex, match.index);\n      output = output + substr;\n      keyPathValue = this._valueForKeyPath(keyPath, data);\n\n      if (keyPathValue) {\n        output = output + keyPathValue.toString();\n      }\n\n      lastIndex = exp.lastIndex;\n    }\n\n    if (lastIndex < template.length) {\n      substr = template.slice(lastIndex, template.length);\n      output = output + substr;\n    }\n\n    return output;\n  };\n\n  Instafeed.prototype._valueForKeyPath = function valueForKeyPath(keyPath, data) {\n    var exp = /([\\w]+)/gm;\n    var match = null;\n    var key = null;\n    var lastValue = data;\n\n    while ((match = exp.exec(keyPath)) !== null) {\n      if (typeof lastValue !== \"object\") {\n        return null;\n      }\n\n      key = match[1];\n      lastValue = lastValue[key];\n    }\n\n    return lastValue;\n  };\n\n  Instafeed.prototype._fail = function fail(err) {\n    var didHook = this._runHook(\"error\", err);\n\n    if (!didHook && console && typeof console.error === \"function\") {\n      console.error(err);\n    }\n\n    this._state.running = false;\n  };\n\n  Instafeed.prototype._start = function start() {\n    this._state.running = true;\n\n    this._runHook(\"before\");\n  };\n\n  Instafeed.prototype._finish = function finish() {\n    this._runHook(\"after\");\n\n    this._state.running = false;\n  };\n\n  Instafeed.prototype._success = function success(data) {\n    this._runHook(\"success\", data);\n\n    this._state.running = false;\n  };\n\n  Instafeed.prototype._makeApiRequest = function makeApiRequest(url, callback) {\n    var called = false;\n    var scope = this;\n    var apiRequest = null;\n\n    var callbackOnce = function callbackOnce(err, value) {\n      if (!called) {\n        called = true;\n        callback(err, value);\n      }\n    };\n\n    apiRequest = new XMLHttpRequest();\n\n    apiRequest.ontimeout = function apiRequestTimedOut(event) {\n      callbackOnce(new Error(\"api request timed out\"));\n    };\n\n    apiRequest.onerror = function apiRequestOnError(event) {\n      callbackOnce(new Error(\"api connection error\"));\n    };\n\n    apiRequest.onload = function apiRequestOnLoad(event) {\n      var contentType = apiRequest.getResponseHeader(\"Content-Type\");\n      var responseJson = null;\n\n      scope._debug(\"apiRequestOnLoad\", \"loaded\", event);\n\n      scope._debug(\"apiRequestOnLoad\", \"response status\", apiRequest.status);\n\n      scope._debug(\"apiRequestOnLoad\", \"response content type\", contentType);\n\n      if (contentType.indexOf(\"application/json\") >= 0) {\n        try {\n          responseJson = JSON.parse(apiRequest.responseText);\n        } catch (err) {\n          scope._debug(\"apiRequestOnLoad\", \"json parsing error\", err, apiRequest.responseText);\n\n          callbackOnce(new Error(\"error parsing response json\"));\n          return;\n        }\n      }\n\n      if (apiRequest.status !== 200) {\n        if (responseJson && responseJson.error) {\n          callbackOnce(new Error(responseJson.error.code + \" \" + responseJson.error.message));\n        } else {\n          callbackOnce(new Error(\"status code \" + apiRequest.status));\n        }\n\n        return;\n      }\n\n      callbackOnce(null, responseJson);\n    };\n\n    apiRequest.open(\"GET\", url, true);\n    apiRequest.timeout = this._options.apiTimeout;\n    apiRequest.send();\n  };\n\n  Instafeed.prototype._getAccessToken = function getAccessToken(callback) {\n    var called = false;\n    var scope = this;\n    var timeoutCheck = null;\n\n    var callbackOnce = function callbackOnce(err, value) {\n      if (!called) {\n        called = true;\n        clearTimeout(timeoutCheck);\n        callback(err, value);\n      }\n    };\n\n    if (typeof this._options.accessToken === \"function\") {\n      this._debug(\"getAccessToken\", \"calling accessToken as function\");\n\n      timeoutCheck = setTimeout(function accessTokenTimeoutCheck() {\n        scope._debug(\"getAccessToken\", \"timeout check\", called);\n\n        callbackOnce(new Error(\"accessToken timed out\"), null);\n      }, this._options.accessTokenTimeout);\n\n      try {\n        this._options.accessToken(function accessTokenReceiver(err, value) {\n          scope._debug(\"getAccessToken\", \"received accessToken callback\", called, err, value);\n\n          callbackOnce(err, value);\n        });\n      } catch (err) {\n        this._debug(\"getAccessToken\", \"error invoking the accessToken as function\", err);\n\n        callbackOnce(err, null);\n      }\n    } else {\n      this._debug(\"getAccessToken\", \"treating accessToken as static\", typeof this._options.accessToken);\n\n      callbackOnce(null, this._options.accessToken);\n    }\n  };\n\n  Instafeed.prototype._debug = function debug() {\n    var args = null;\n\n    if (this._options.debug && console && typeof console.log === \"function\") {\n      args = [].slice.call(arguments);\n      args[0] = \"[Instafeed] [\" + args[0] + \"]\";\n      console.log.apply(null, args);\n    }\n  };\n\n  Instafeed.prototype._runHook = function runHook(hookName, data) {\n    var success = false;\n\n    if (typeof this._options[hookName] === \"function\") {\n      try {\n        this._options[hookName](data);\n\n        success = true;\n      } catch (err) {\n        this._debug(\"runHook\", \"error calling hook\", hookName, err);\n      }\n    }\n\n    return success;\n  };\n\n  return Instafeed;\n});\n\nexport default exportInstafeed;","map":{"version":3,"sources":["/Users/akoenig/Documents/coding/webdev/cookingsousviv/src/scripts/instafeed.js"],"names":["exportInstafeed","root","factory","define","amd","exports","nodeName","module","Instafeed","defineInstafeed","assert","val","msg","Error","options","opts","accessToken","accessTokenTimeout","after","apiTimeout","before","debug","error","filter","limit","mock","render","sort","success","target","template","templateBoundaries","transform","state","running","optKey","length","_state","_options","prototype","run","scope","node","url","items","html","_debug","_start","document","getElementById","_fail","_getAccessToken","onTokenReceived","err","token","message","_makeApiRequest","onResponseReceived","data","_success","_processData","processErr","_renderData","renderErr","innerHTML","_finish","processData","hasTransform","hasFilter","hasSort","hasLimit","transformedFiltered","limitDelta","dataItem","transformedItem","filterResult","i","_getItemData","push","splice","_extractTags","extractTags","str","exp","badChars","tags","match","exec","test","getItemData","type","image","media_type","media_url","thumbnail_url","caption","id","link","permalink","model","timestamp","username","renderData","hasTemplate","hasRender","item","itemHtml","_basicRender","basicRender","RegExp","output","substr","lastIndex","keyPath","keyPathValue","slice","index","_valueForKeyPath","toString","valueForKeyPath","key","lastValue","fail","didHook","_runHook","console","start","finish","makeApiRequest","callback","called","apiRequest","callbackOnce","value","XMLHttpRequest","ontimeout","apiRequestTimedOut","event","onerror","apiRequestOnError","onload","apiRequestOnLoad","contentType","getResponseHeader","responseJson","status","indexOf","JSON","parse","responseText","code","open","timeout","send","getAccessToken","timeoutCheck","clearTimeout","setTimeout","accessTokenTimeoutCheck","accessTokenReceiver","args","log","call","arguments","apply","runHook","hookName"],"mappings":"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","sourcesContent":["/* instafeed.js | v2.0.0-rc2 | https://github.com/stevenschobert/instafeed.js | License: MIT */\n(function exportInstafeed(root, factory) {\n    if (typeof define === \"function\" && define.amd) {\n      define([], factory);\n    } else if (typeof exports === \"object\" && typeof exports.nodeName !== \"string\") {\n      module.exports = factory();\n    } else {\n      root.Instafeed = factory();\n    }\n  })(this, function defineInstafeed() {\n    function assert(val, msg) {\n      if (!val) {\n        throw new Error(msg);\n      }\n    }\n    function Instafeed(options) {\n      assert(!options || typeof options === \"object\", \"options must be an object, got \" + options + \" (\" + typeof options + \")\");\n      var opts = {\n        accessToken: null,\n        accessTokenTimeout: 1e4,\n        after: null,\n        apiTimeout: 1e4,\n        before: null,\n        debug: false,\n        error: null,\n        filter: null,\n        limit: null,\n        mock: false,\n        render: null,\n        sort: null,\n        success: null,\n        target: \"instafeed\",\n        template: '<a href=\"{{link}}\"><img title=\"{{caption}}\" src=\"{{image}}\" /></a>',\n        templateBoundaries: [ \"{{\", \"}}\" ],\n        transform: null\n      };\n      var state = {\n        running: false\n      };\n      if (options) {\n        for (var optKey in opts) {\n          if (typeof options[optKey] !== \"undefined\") {\n            opts[optKey] = options[optKey];\n          }\n        }\n      }\n      assert(typeof opts.target === \"string\" || typeof opts.target === \"object\", \"target must be a string or DOM node, got \" + opts.target + \" (\" + typeof opts.target + \")\");\n      assert(typeof opts.accessToken === \"string\" || typeof opts.accessToken === \"function\", \"accessToken must be a string or function, got \" + opts.accessToken + \" (\" + typeof opts.accessToken + \")\");\n      assert(typeof opts.accessTokenTimeout === \"number\", \"accessTokenTimeout must be a number, got \" + opts.accessTokenTimeout + \" (\" + typeof opts.accessTokenTimeout + \")\");\n      assert(typeof opts.apiTimeout === \"number\", \"apiTimeout must be a number, got \" + opts.apiTimeout + \" (\" + typeof opts.apiTimeout + \")\");\n      assert(typeof opts.debug === \"boolean\", \"debug must be true or false, got \" + opts.debug + \" (\" + typeof opts.debug + \")\");\n      assert(typeof opts.mock === \"boolean\", \"mock must be true or false, got \" + opts.mock + \" (\" + typeof opts.mock + \")\");\n      assert(typeof opts.templateBoundaries === \"object\" && opts.templateBoundaries.length === 2 && typeof opts.templateBoundaries[0] === \"string\" && typeof opts.templateBoundaries[1] === \"string\", \"templateBoundaries must be an array of 2 strings, got \" + opts.templateBoundaries + \" (\" + typeof opts.templateBoundaries + \")\");\n      assert(!opts.template || typeof opts.template === \"string\", \"template must null or string, got \" + opts.template + \" (\" + typeof opts.template + \")\");\n      assert(!opts.error || typeof opts.error === \"function\", \"error must be null or function, got \" + opts.error + \" (\" + typeof opts.error + \")\");\n      assert(!opts.before || typeof opts.before === \"function\", \"before must be null or function, got \" + opts.before + \" (\" + typeof opts.before + \")\");\n      assert(!opts.after || typeof opts.after === \"function\", \"after must be null or function, got \" + opts.after + \" (\" + typeof opts.after + \")\");\n      assert(!opts.success || typeof opts.success === \"function\", \"success must be null or function, got \" + opts.success + \" (\" + typeof opts.success + \")\");\n      assert(!opts.filter || typeof opts.filter === \"function\", \"filter must be null or function, got \" + opts.filter + \" (\" + typeof opts.filter + \")\");\n      assert(!opts.transform || typeof opts.transform === \"function\", \"transform must be null or function, got \" + opts.transform + \" (\" + typeof opts.transform + \")\");\n      assert(!opts.sort || typeof opts.sort === \"function\", \"sort must be null or function, got \" + opts.sort + \" (\" + typeof opts.sort + \")\");\n      assert(!opts.render || typeof opts.render === \"function\", \"render must be null or function, got \" + opts.render + \" (\" + typeof opts.render + \")\");\n      assert(!opts.limit || typeof opts.limit === \"number\", \"limit must be null or number, got \" + opts.limit + \" (\" + typeof opts.limit + \")\");\n      this._state = state;\n      this._options = opts;\n    }\n    Instafeed.prototype.run = function run() {\n      var scope = this;\n      var node = null;\n      var url = null;\n      var items = null;\n      var html = null;\n      this._debug(\"run\", \"options\", this._options);\n      this._debug(\"run\", \"state\", this._state);\n      if (this._state.running) {\n        this._debug(\"run\", \"already running, skipping\");\n        return false;\n      }\n      this._start();\n      this._debug(\"run\", \"getting dom node\");\n      if (typeof this._options.target === \"string\") {\n        node = document.getElementById(this._options.target);\n      } else {\n        node = this._options.target;\n      }\n      if (!node) {\n        this._fail(new Error(\"no element found with ID \" + this._options.target));\n        return false;\n      }\n      this._debug(\"run\", \"got dom node\", node);\n      this._debug(\"run\", \"getting access token\");\n      this._getAccessToken(function onTokenReceived(err, token) {\n        if (err) {\n          scope._debug(\"onTokenReceived\", \"error\", err);\n          scope._fail(new Error(\"error getting access token: \" + err.message));\n          return;\n        }\n        url = \"https://graph.instagram.com/me/media?fields=caption,id,media_type,media_url,permalink,thumbnail_url,timestamp,username&access_token=\" + token;\n        scope._debug(\"onTokenReceived\", \"request url\", url);\n        scope._makeApiRequest(url, function onResponseReceived(err, data) {\n          if (err) {\n            scope._debug(\"onResponseReceived\", \"error\", err);\n            scope._fail(new Error(\"api request error: \" + err.message));\n            return;\n          }\n          scope._debug(\"onResponseReceived\", \"data\", data);\n          scope._success(data);\n          try {\n            items = scope._processData(data);\n            scope._debug(\"onResponseReceived\", \"processed data\", items);\n          } catch (processErr) {\n            scope._fail(processErr);\n            return;\n          }\n          if (scope._options.mock) {\n            scope._debug(\"onResponseReceived\", \"mock enabled, skipping render\");\n          } else {\n            try {\n              html = scope._renderData(items);\n              scope._debug(\"onResponseReceived\", \"html content\", html);\n            } catch (renderErr) {\n              scope._fail(renderErr);\n              return;\n            }\n            node.innerHTML = html;\n          }\n          scope._finish();\n        });\n      });\n      return true;\n    };\n    Instafeed.prototype._processData = function processData(data) {\n      var hasTransform = typeof this._options.transform === \"function\";\n      var hasFilter = typeof this._options.filter === \"function\";\n      var hasSort = typeof this._options.sort === \"function\";\n      var hasLimit = typeof this._options.limit === \"number\";\n      var transformedFiltered = [];\n      var limitDelta = null;\n      var dataItem = null;\n      var transformedItem = null;\n      var filterResult = null;\n      this._debug(\"processData\", \"hasFilter\", hasFilter, \"hasTransform\", hasTransform, \"hasSort\", hasSort, \"hasLimit\", hasLimit);\n      if (typeof data !== \"object\" || typeof data.data !== \"object\" || data.data.length <= 0) {\n        return null;\n      }\n      for (var i = 0; i < data.data.length; i++) {\n        dataItem = this._getItemData(data.data[i]);\n        if (hasTransform) {\n          try {\n            transformedItem = this._options.transform(dataItem);\n            this._debug(\"processData\", \"transformed item\", dataItem, transformedItem);\n          } catch (err) {\n            this._debug(\"processData\", \"error calling transform\", err);\n            throw new Error(\"error in transform: \" + err.message);\n          }\n        } else {\n          transformedItem = dataItem;\n        }\n        if (hasFilter) {\n          try {\n            filterResult = this._options.filter(transformedItem);\n            this._debug(\"processData\", \"filter item result\", transformedItem, filterResult);\n          } catch (err) {\n            this._debug(\"processData\", \"error calling filter\", err);\n            throw new Error(\"error in filter: \" + err.message);\n          }\n          if (filterResult) {\n            transformedFiltered.push(transformedItem);\n          }\n        } else {\n          transformedFiltered.push(transformedItem);\n        }\n      }\n      if (hasSort) {\n        try {\n          transformedFiltered.sort(this._options.sort);\n        } catch (err) {\n          this._debug(\"processData\", \"error calling sort\", err);\n          throw new Error(\"error in sort: \" + err.message);\n        }\n      }\n      if (hasLimit) {\n        limitDelta = transformedFiltered.length - this._options.limit;\n        this._debug(\"processData\", \"checking limit\", transformedFiltered.length, this._options.limit, limitDelta);\n        if (limitDelta > 0) {\n          transformedFiltered.splice(transformedFiltered.length - limitDelta, limitDelta);\n        }\n      }\n      return transformedFiltered;\n    };\n    Instafeed.prototype._extractTags = function extractTags(str) {\n      var exp = /#([^\\s]+)/gi;\n      var badChars = /[~`!@#$%^&*\\(\\)\\-\\+={}\\[\\]:;\"'<>\\?,\\./|\\\\\\s]+/i;\n      var tags = [];\n      if (typeof str === \"string\") {\n        while ((match = exp.exec(str)) !== null) {\n          if (badChars.test(match[1]) === false) {\n            tags.push(match[1]);\n          }\n        }\n      }\n      return tags;\n    };\n    Instafeed.prototype._getItemData = function getItemData(data) {\n      var type = null;\n      var image = null;\n      switch (data.media_type) {\n       case \"IMAGE\":\n        type = \"image\";\n        image = data.media_url;\n        break;\n  \n       case \"VIDEO\":\n        type = \"video\";\n        image = data.thumbnail_url;\n        break;\n  \n       case \"CAROUSEL_ALBUM\":\n        type = \"album\";\n        image = data.media_url;\n        break;\n      }\n      return {\n        caption: data.caption,\n        tags: this._extractTags(data.caption),\n        id: data.id,\n        image: image,\n        link: data.permalink,\n        model: data,\n        timestamp: data.timestamp,\n        type: type,\n        username: data.username\n      };\n    };\n    Instafeed.prototype._renderData = function renderData(items) {\n      var hasTemplate = typeof this._options.template === \"string\";\n      var hasRender = typeof this._options.render === \"function\";\n      var item = null;\n      var itemHtml = null;\n      var html = \"\";\n      this._debug(\"renderData\", \"hasTemplate\", hasTemplate, \"hasRender\", hasRender);\n      if (typeof items !== \"object\" || items.length <= 0) {\n        return null;\n      }\n      for (var i = 0; i < items.length; i++) {\n        item = items[i];\n        if (hasRender) {\n          try {\n            itemHtml = this._options.render(item, this._options);\n            this._debug(\"renderData\", \"custom render result\", item, itemHtml);\n          } catch (err) {\n            this._debug(\"renderData\", \"error calling render\", err);\n            throw new Error(\"error in render: \" + err.message);\n          }\n        } else if (hasTemplate) {\n          itemHtml = this._basicRender(item);\n        }\n        if (itemHtml) {\n          html = html + itemHtml;\n        } else {\n          this._debug(\"renderData\", \"render item did not return any content\", item);\n        }\n      }\n      return html;\n    };\n    Instafeed.prototype._basicRender = function basicRender(data) {\n      var exp = new RegExp(this._options.templateBoundaries[0] + \"([\\\\s\\\\w.]+)\" + this._options.templateBoundaries[1], \"gm\");\n      var template = this._options.template;\n      var match = null;\n      var output = \"\";\n      var substr = null;\n      var lastIndex = 0;\n      var keyPath = null;\n      var keyPathValue = null;\n      while ((match = exp.exec(template)) !== null) {\n        keyPath = match[1];\n        substr = template.slice(lastIndex, match.index);\n        output = output + substr;\n        keyPathValue = this._valueForKeyPath(keyPath, data);\n        if (keyPathValue) {\n          output = output + keyPathValue.toString();\n        }\n        lastIndex = exp.lastIndex;\n      }\n      if (lastIndex < template.length) {\n        substr = template.slice(lastIndex, template.length);\n        output = output + substr;\n      }\n      return output;\n    };\n    Instafeed.prototype._valueForKeyPath = function valueForKeyPath(keyPath, data) {\n      var exp = /([\\w]+)/gm;\n      var match = null;\n      var key = null;\n      var lastValue = data;\n      while ((match = exp.exec(keyPath)) !== null) {\n        if (typeof lastValue !== \"object\") {\n          return null;\n        }\n        key = match[1];\n        lastValue = lastValue[key];\n      }\n      return lastValue;\n    };\n    Instafeed.prototype._fail = function fail(err) {\n      var didHook = this._runHook(\"error\", err);\n      if (!didHook && console && typeof console.error === \"function\") {\n        console.error(err);\n      }\n      this._state.running = false;\n    };\n    Instafeed.prototype._start = function start() {\n      this._state.running = true;\n      this._runHook(\"before\");\n    };\n    Instafeed.prototype._finish = function finish() {\n      this._runHook(\"after\");\n      this._state.running = false;\n    };\n    Instafeed.prototype._success = function success(data) {\n      this._runHook(\"success\", data);\n      this._state.running = false;\n    };\n    Instafeed.prototype._makeApiRequest = function makeApiRequest(url, callback) {\n      var called = false;\n      var scope = this;\n      var apiRequest = null;\n      var callbackOnce = function callbackOnce(err, value) {\n        if (!called) {\n          called = true;\n          callback(err, value);\n        }\n      };\n      apiRequest = new XMLHttpRequest();\n      apiRequest.ontimeout = function apiRequestTimedOut(event) {\n        callbackOnce(new Error(\"api request timed out\"));\n      };\n      apiRequest.onerror = function apiRequestOnError(event) {\n        callbackOnce(new Error(\"api connection error\"));\n      };\n      apiRequest.onload = function apiRequestOnLoad(event) {\n        var contentType = apiRequest.getResponseHeader(\"Content-Type\");\n        var responseJson = null;\n        scope._debug(\"apiRequestOnLoad\", \"loaded\", event);\n        scope._debug(\"apiRequestOnLoad\", \"response status\", apiRequest.status);\n        scope._debug(\"apiRequestOnLoad\", \"response content type\", contentType);\n        if (contentType.indexOf(\"application/json\") >= 0) {\n          try {\n            responseJson = JSON.parse(apiRequest.responseText);\n          } catch (err) {\n            scope._debug(\"apiRequestOnLoad\", \"json parsing error\", err, apiRequest.responseText);\n            callbackOnce(new Error(\"error parsing response json\"));\n            return;\n          }\n        }\n        if (apiRequest.status !== 200) {\n          if (responseJson && responseJson.error) {\n            callbackOnce(new Error(responseJson.error.code + \" \" + responseJson.error.message));\n          } else {\n            callbackOnce(new Error(\"status code \" + apiRequest.status));\n          }\n          return;\n        }\n        callbackOnce(null, responseJson);\n      };\n      apiRequest.open(\"GET\", url, true);\n      apiRequest.timeout = this._options.apiTimeout;\n      apiRequest.send();\n    };\n    Instafeed.prototype._getAccessToken = function getAccessToken(callback) {\n      var called = false;\n      var scope = this;\n      var timeoutCheck = null;\n      var callbackOnce = function callbackOnce(err, value) {\n        if (!called) {\n          called = true;\n          clearTimeout(timeoutCheck);\n          callback(err, value);\n        }\n      };\n      if (typeof this._options.accessToken === \"function\") {\n        this._debug(\"getAccessToken\", \"calling accessToken as function\");\n        timeoutCheck = setTimeout(function accessTokenTimeoutCheck() {\n          scope._debug(\"getAccessToken\", \"timeout check\", called);\n          callbackOnce(new Error(\"accessToken timed out\"), null);\n        }, this._options.accessTokenTimeout);\n        try {\n          this._options.accessToken(function accessTokenReceiver(err, value) {\n            scope._debug(\"getAccessToken\", \"received accessToken callback\", called, err, value);\n            callbackOnce(err, value);\n          });\n        } catch (err) {\n          this._debug(\"getAccessToken\", \"error invoking the accessToken as function\", err);\n          callbackOnce(err, null);\n        }\n      } else {\n        this._debug(\"getAccessToken\", \"treating accessToken as static\", typeof this._options.accessToken);\n        callbackOnce(null, this._options.accessToken);\n      }\n    };\n    Instafeed.prototype._debug = function debug() {\n      var args = null;\n      if (this._options.debug && console && typeof console.log === \"function\") {\n        args = [].slice.call(arguments);\n        args[0] = \"[Instafeed] [\" + args[0] + \"]\";\n        console.log.apply(null, args);\n      }\n    };\n    Instafeed.prototype._runHook = function runHook(hookName, data) {\n      var success = false;\n      if (typeof this._options[hookName] === \"function\") {\n        try {\n          this._options[hookName](data);\n          success = true;\n        } catch (err) {\n          this._debug(\"runHook\", \"error calling hook\", hookName, err);\n        }\n      }\n      return success;\n    };\n    return Instafeed;\n  });\n\n  export default exportInstafeed"]},"metadata":{},"sourceType":"module"}