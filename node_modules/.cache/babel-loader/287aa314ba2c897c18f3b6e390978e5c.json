{"ast":null,"code":"var _jsxFileName = \"/Users/akoenig/Documents/coding/webdev/cookingsousviv/src/Instafeed.js\";\nimport React from \"react\";\nimport axios from \"axios\";\n\nclass Instafeed extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      all_photos: [],\n      displayed_photos: [],\n      additional_photos: true,\n      num_photos_displayed: 32\n    };\n    this.retrievePhotos();\n    this.retrievePhotos = this.retrievePhotos.bind(this);\n    this.handleShowMore = this.handleShowMore.bind(this);\n  }\n\n  componentWillMount() {\n    window.addEventListener('scroll', this.handleShowMore);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleShowMore);\n  }\n\n  retrievePhotos() {\n    const fields = \"id,caption,media_type,media_url,permalink,thumbnail_url,timestamp,username\";\n    let user_id = \"17841401439222266\";\n    let token = 'IGQVJYaWFVX3ZASU1BScXB6d0t5RHBSS0ZAfdGFiekV1eGJ2cFp0NW5IYXJYZAmZAWRU5adV9qWnJzTHVJMjJGTEg1aHVQZA2hkWDViN1diSU81MnExTFJKajg2R0RLVHFMTTl2bGJlRS1pOE5ENDhzeHZA5bgZDZD';\n    let photo_limit = 1000;\n    axios.get(`https://graph.instagram.com/${user_id}/media?fields=${fields}&access_token=${token}&limit=${photo_limit}`).then(res => {\n      this.setState({\n        all_photos: res.data.data,\n        displayed_photos: Object.values(res.data.data).slice(0, this.state.num_photos_displayed),\n        num_photos_displayed: this.state.num_photos_displayed + 32\n      });\n      this.checkForAdditionalPhotos();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  checkForAdditionalPhotos() {\n    if (this.state.num_photos_displayed < this.state.all_photos.length) {\n      this.setState({\n        additional_photos: true\n      });\n    } else {\n      this.setState({\n        additional_photos: false\n      });\n    }\n  }\n\n  handleShowMore() {\n    if (window.innerHeight + document.documentElement.scrollTop + 1 >= document.scrollingElement.scrollHeight) {\n      this.setState({\n        displayed_photos: Object.values(this.state.all_photos).slice(0, this.state.num_photos_displayed),\n        num_photos_displayed: this.state.num_photos_displayed + 32\n      });\n      this.checkForAdditionalPhotos();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"instafeed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, this.state.displayed_photos.map((photo, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-xs-12 col-sm-6 col-md-4 col-lg-3\",\n        key: photo.timestamp,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: photo.permalink,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"photo-box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"image-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: photo.media_type === \"VIDEO\" ? photo.thumbnail_url : photo.media_url,\n        alt: photo.caption,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 41\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"likes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: require('./images/heart.png'),\n        alt: \"heart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 60\n        }\n      })))));\n    }));\n  }\n\n}\n\nexport default Instafeed;","map":{"version":3,"sources":["/Users/akoenig/Documents/coding/webdev/cookingsousviv/src/Instafeed.js"],"names":["React","axios","Instafeed","Component","constructor","props","state","all_photos","displayed_photos","additional_photos","num_photos_displayed","retrievePhotos","bind","handleShowMore","componentWillMount","window","addEventListener","componentWillUnmount","removeEventListener","fields","user_id","token","photo_limit","get","then","res","setState","data","Object","values","slice","checkForAdditionalPhotos","catch","err","console","log","length","innerHeight","document","documentElement","scrollTop","scrollingElement","scrollHeight","render","map","photo","index","timestamp","permalink","media_type","thumbnail_url","media_url","caption","require"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport axios from \"axios\"\n\nclass Instafeed extends React.Component {\n    state = {\n        all_photos: [],\n        displayed_photos: [],\n        additional_photos: true,\n        num_photos_displayed: 32,\n    }\n\n    constructor(props) {\n        super(props)\n\n        this.retrievePhotos()\n\n        this.retrievePhotos = this.retrievePhotos.bind(this)\n        this.handleShowMore = this.handleShowMore.bind(this)\n    }\n\n    componentWillMount(){\n        window.addEventListener('scroll', this.handleShowMore);\n    }\n    \n    componentWillUnmount(){\n        window.removeEventListener('scroll', this.handleShowMore);\n    }\n\n    retrievePhotos() {\n        const fields = \"id,caption,media_type,media_url,permalink,thumbnail_url,timestamp,username\"\n        let user_id = \"17841401439222266\"\n        let token = 'IGQVJYaWFVX3ZASU1BScXB6d0t5RHBSS0ZAfdGFiekV1eGJ2cFp0NW5IYXJYZAmZAWRU5adV9qWnJzTHVJMjJGTEg1aHVQZA2hkWDViN1diSU81MnExTFJKajg2R0RLVHFMTTl2bGJlRS1pOE5ENDhzeHZA5bgZDZD'\n        let photo_limit = 1000\n\n        axios.get(`https://graph.instagram.com/${user_id}/media?fields=${fields}&access_token=${token}&limit=${photo_limit}`)\n        .then(res => {\n            this.setState({ \n                all_photos: res.data.data,\n                displayed_photos: Object.values(res.data.data).slice(0, this.state.num_photos_displayed),\n                num_photos_displayed: this.state.num_photos_displayed + 32 \n            });\n            this.checkForAdditionalPhotos()\n        })\n        .catch(err => {\n            console.log(err)\n        })\n    }\n\n    checkForAdditionalPhotos() {\n        if (this.state.num_photos_displayed < this.state.all_photos.length) {\n            this.setState({ additional_photos: true })\n        } else {\n            this.setState({ additional_photos: false })  \n        }\n    }\n\n    handleShowMore() {\n        if (window.innerHeight + document.documentElement.scrollTop + 1 >= document.scrollingElement.scrollHeight) {\n            this.setState({ \n                displayed_photos: Object.values(this.state.all_photos).slice(0, this.state.num_photos_displayed),\n                num_photos_displayed: this.state.num_photos_displayed + 32 \n            })\n            this.checkForAdditionalPhotos()\n        }\n    }\n\n    render() {\n        return(\n            <div id=\"instafeed\">\n                { this.state.displayed_photos.map((photo, index) => {\n                    return(\n                        <div \n                            className=\"col-xs-12 col-sm-6 col-md-4 col-lg-3\" \n                            key={photo.timestamp}\n                        >\n                            <a href={photo.permalink}>\n                                <div className=\"photo-box\">\n                                    <div className=\"image-wrap\">\n                                        <img \n                                            src={photo.media_type === \"VIDEO\"\n                                                ? photo.thumbnail_url\n                                                : photo.media_url\n                                            } \n                                            alt={photo.caption} \n                                        />\n                                    </div>\n                                    <div className=\"likes\"><img src={require('./images/heart.png')} alt=\"heart\" /></div>\n                                </div>\n                            </a>\n                        </div>\n                    )\n                })}\n            </div>\n        )\n    }\n  }\n\n  export default Instafeed"]},"metadata":{},"sourceType":"module"}